name: CI - Build, Scan, SBOM
on: [push, pull_request]

env:
  IMAGE: ozdemire/fastapi-app
  TAG: latest

jobs:
  build-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE }}:${{ env.TAG }}
          platforms: linux/amd64,linux/arm64

      - name: Trivy Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE }}:${{ env.TAG }}
          format: table
          output: trivy-report.txt
          exit-code: '0'

      - name: Install syft & bandit
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s --
          python -m pip install --upgrade pip
          python -m pip install bandit

      - name: SBOM (syft)
        run: ./bin/syft ${{ env.IMAGE }}:${{ env.TAG }} -o json > sbom.json

      - name: Bandit (static code)
        run: bandit -r app/ -f json -o bandit-report.json || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            trivy-report.txt
            sbom.json
            bandit-report.json

      - name: Install cosign
        uses: sigstore/cosign-installer@v3
        with:
          cosign-release: 'v2.5.2'

      - name: Write cosign keys
        run: |
          echo "${{ secrets.COSIGN_PRIVATE_KEY }}" > cosign.key
          echo "${{ secrets.COSIGN_PUBLIC_KEY }}"  > cosign.pub

      - name: Cosign sign (keyed)
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: |
          cosign sign --yes --key cosign.key $IMAGE:$TAG

      - name: Cosign verify (keyed)
        run: cosign verify --key cosign.pub $IMAGE:$TAG